name: 🧪 Pruebas Continuas

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v4

    - name: 🐍 Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock

    - name: 🧪 Ejecutar tests críticos
      run: |
        pytest tests/utils/ tests/test_schema_consistency.py -v

    - name: 🧪 Ejecutar edge cases
      run: |
        pytest tests/inventario/test_inventario_edge_cases.py -v
        pytest tests/obras/test_obras_edge_cases.py -v

    - name: 📊 Generar reporte de cobertura
      run: |
        pytest tests/ --cov=modules --cov=core --cov=utils --cov-report=xml

    - name: 📤 Subir cobertura a Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  security:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: 🐍 Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: 📦 Instalar herramientas de seguridad
      run: |
        pip install bandit safety

    - name: 🔒 Ejecutar análisis de seguridad
      run: |
        bandit -r modules/ core/ utils/ -f json -o security-report.json
        safety check --json --output safety-report.json

    - name: 📤 Guardar reportes de seguridad
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          security-report.json
          safety-report.json
