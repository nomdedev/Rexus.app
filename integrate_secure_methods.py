
#!/usr/bin/env python3
"""
Script para integrar mÃ©todos seguros en administraciÃ³n
"""

def integrate_secure_methods():
    """Integra mÃ©todos seguros en administracion/model.py"""
    
    print("ðŸ”§ INSTRUCCIONES PARA INTEGRACIÃ“N MANUAL:")
    print("=" * 50)
    print()
    print("1. Abrir administracion_metodos_seguros.py")
    print("2. Copiar cada mÃ©todo y reemplazar en administracion/model.py:")
    print()
    print("   REEMPLAZOS NECESARIOS:")
    print("   â”œâ”€â”€ crear_empleado() â†’ crear_empleado_seguro()")
    print("   â”œâ”€â”€ crear_recibo() â†’ crear_recibo_seguro()")  
    print("   â”œâ”€â”€ registrar_pago_obra() â†’ registrar_pago_obra_seguro()")
    print("   â”œâ”€â”€ registrar_compra_material() â†’ registrar_compra_material_seguro()")
    print("   â””â”€â”€ marcar_recibo_impreso() â†’ marcar_recibo_impreso_seguro()")
    print()
    print("3. Agregar imports necesarios en administracion/model.py:")
    print("   from core.utils.sql_manager import SQLQueryManager")
    print("   import logging")
    print("   logger = logging.getLogger(__name__)")
    print()
    print("4. Inicializar sql_manager en __init__:")
    print("   self.sql_manager = SQLQueryManager()")
    print()
    print("5. Verificar que todos los archivos SQL existen en sql/administracion/")
    print()
    print("âœ… Todos los mÃ©todos usan parÃ¡metros preparados y previenen SQL injection")

if __name__ == '__main__':
    integrate_secure_methods()
